name: CI

on: [push, pull_request]

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.x'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Build frontend bundle
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright end-to-end tests
        env:
          PLAYWRIGHT_HTML_REPORT: playwright-report
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          if-no-files-found: warn

  server:
    name: Server
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.x'
          cache: npm
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Smoke test startup
        env:
          HOST: 127.0.0.1
          PORT: 8787
        run: |
          npm start &
          SERVER_PID=$!
          trap "kill $SERVER_PID" EXIT
          READY=false
          for i in {1..10}; do
            RESPONSE=$(curl -s http://127.0.0.1:8787/ || true)
            if echo "$RESPONSE" | grep -q "Invalid proxy request"; then
              READY=true
              break
            fi
            sleep 1
          done
          if [ "$READY" != "true" ]; then
            echo "Server did not respond as expected" >&2
            exit 1
          fi
          kill $SERVER_PID
          trap - EXIT
